{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/icarus/source/css/default.styl","path":"css/default.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/cyberpunk.styl","path":"css/cyberpunk.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/og_image.png","path":"img/og_image.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/back_to_top.js","path":"js/back_to_top.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/column.js","path":"js/column.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"16e6e182ce1e6df1443d8cd92a9d4cf892ef367f","modified":1741053823965},{"_id":"source/_posts/How-to-create-a-Hexo-Icarus-Blog.md","hash":"268c24cda0e417bd7abb56ae94b096013fb7864e","modified":1741679638413},{"_id":"themes/icarus/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1741055283104},{"_id":"themes/icarus/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1741055283108},{"_id":"themes/icarus/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1741055283108},{"_id":"themes/icarus/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1741055283109},{"_id":"themes/icarus/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1741055283110},{"_id":"themes/icarus/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1741055283087},{"_id":"themes/icarus/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1741055283094},{"_id":"themes/icarus/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1741055283092},{"_id":"themes/icarus/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1741055283092},{"_id":"themes/icarus/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1741055283093},{"_id":"themes/icarus/.eslintignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1741055283078},{"_id":"themes/icarus/.eslintrc.json","hash":"ca45d8e5d80ad6b7004cddacae7fc7d8040b2d6f","modified":1741055283078},{"_id":"themes/icarus/CONTRIBUTING.md","hash":"70254c6778c1e41bb2ff222bbf3a70b2239b9bc1","modified":1741055283084},{"_id":"themes/icarus/.gitignore","hash":"36084c0851a22bfd393933abb8e262562ffc6802","modified":1741055283083},{"_id":"themes/icarus/package.json","hash":"f5bf0acf4fee3b57046e0be507d2d324e2b8805f","modified":1741055283110},{"_id":"themes/icarus/README.md","hash":"32f9f4fc8cd7ec60b30544bd2e558b593519ae5d","modified":1741055283084},{"_id":"themes/icarus/LICENSE","hash":"86037e5335a49321fa73b7815cab542057fac944","modified":1741055283084},{"_id":"themes/icarus/.npmignore","hash":"42242c8da7a020a3295e7dd3d18bf022cb08b661","modified":1741055283084},{"_id":"themes/icarus/.github/dependabot.yml","hash":"d532d0db30e42211f35823b9885f3ed1b2d51777","modified":1741055283082},{"_id":"themes/icarus/.github/stale.yml","hash":"88c73f6216c5666d2f60b1e8fe690a3f6e561e42","modified":1741055283082},{"_id":"themes/icarus/include/config.js","hash":"4b8a3096137e0d879fb17972a69630bde38d8212","modified":1741055283085},{"_id":"themes/icarus/include/register.js","hash":"040fed1d0d7e4d8003446d1541bc15a2c4b4e500","modified":1741055283087},{"_id":"themes/icarus/include/dependency.js","hash":"e02471f80db87db43aa7d527176e195b60dc4b99","modified":1741055283085},{"_id":"themes/icarus/layout/archive.jsx","hash":"daf8eca64197709a9dc4a4792c403a32d78bdfae","modified":1741055283104},{"_id":"themes/icarus/layout/categories.jsx","hash":"b8ad43e28a4990d222bfbb95b032f88555492347","modified":1741055283104},{"_id":"themes/icarus/layout/category.jsx","hash":"2313be8301011d218830b853b294b022ce81b423","modified":1741055283104},{"_id":"themes/icarus/layout/index.jsx","hash":"0a84a2348394fa9fc5080dd396bd28d357594f47","modified":1741055283108},{"_id":"themes/icarus/layout/layout.jsx","hash":"ac7c4e3465a116c7f05f8c2e09ee6d6b9467abf1","modified":1741055283108},{"_id":"themes/icarus/layout/page.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1741055283108},{"_id":"themes/icarus/layout/post.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1741055283109},{"_id":"themes/icarus/layout/tag.jsx","hash":"a9a08c9f3eec8994d37149d1ab19f2b5b8f4cd2f","modified":1741055283110},{"_id":"themes/icarus/layout/tags.jsx","hash":"2c42cb64778235dd220c563a27a92108ddc50cc4","modified":1741055283110},{"_id":"themes/icarus/scripts/index.js","hash":"93a79969c7eb47cfac097893cda36368db56902c","modified":1741055283112},{"_id":"themes/icarus/languages/en.yml","hash":"3d674204d9f723c829226da745afddd180c1131d","modified":1741055283099},{"_id":"themes/icarus/languages/fr.yml","hash":"b992b68705f5050a99de926525b3cb40d95c4769","modified":1741055283099},{"_id":"themes/icarus/languages/id.yml","hash":"5e48b1d62378cadeb64b88349477726a5c1bae47","modified":1741055283100},{"_id":"themes/icarus/languages/it.yml","hash":"b76999994cda6b08b53d34c3dd67947f164de655","modified":1741055283100},{"_id":"themes/icarus/languages/es.yml","hash":"38579b8fad4b6997362acc770615bcd85ff20f68","modified":1741055283099},{"_id":"themes/icarus/languages/pl.yml","hash":"2e7debb44cd91096f30efc87bf8d6b1d0d0214c9","modified":1741055283100},{"_id":"themes/icarus/languages/de.yml","hash":"78421f09961ca0b24756a0688fb2cb2e2696e25f","modified":1741055283099},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"ee8f73350e4c6e2f63b7fc72b34472a6b1e21244","modified":1741055283100},{"_id":"themes/icarus/languages/ru.yml","hash":"9d91358c2acbe7a0f2a25daf7f65b999ff32d068","modified":1741055283102},{"_id":"themes/icarus/languages/sv.yml","hash":"b12eee168c52aac855ffce9f78fe5fd5d6e3970c","modified":1741055283102},{"_id":"themes/icarus/languages/tr.yml","hash":"dd0a7bfe14848d6e1aa229198fe1db03e08e305e","modified":1741055283102},{"_id":"themes/icarus/languages/ja.yml","hash":"801d9930fef48d6a3f80470d5bed4f3eb78147e6","modified":1741055283100},{"_id":"themes/icarus/languages/tk.yml","hash":"ca583168bd2025124a1cd0e977da475d7a7496fd","modified":1741055283102},{"_id":"themes/icarus/languages/vn.yml","hash":"5f2fffa642110c81d8f529949711c9d19ad6bbbe","modified":1741055283103},{"_id":"themes/icarus/languages/ko.yml","hash":"e3374265377809c1518114cf352b595840c0b416","modified":1741055283100},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"02475ba14afc70dfeaf5678467cee307835e4efa","modified":1741055283103},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"a6826e0c8cdb9ad286324b682b466a9e2ad78e6f","modified":1741055283103},{"_id":"themes/icarus/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md","hash":"e106fa240c24c8bfbdd623549651600c6d786c9c","modified":1741055283081},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/Bug反馈.md","hash":"d801be6937df21e63113be8840b2e23c465db87b","modified":1741055283080},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/feature_request.md","hash":"05313e241a3d43fdadb0f74390b562c07c25d4d0","modified":1741055283081},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/功能建议.md","hash":"c6f60f37e6cd0bc21a81b3b07f84e04e9e80fb57","modified":1741055283081},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/config.yml","hash":"b49270a202d839c298e584b5d017f56140c7e7a0","modified":1741055283081},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/bug_report.md","hash":"5d3abdc1a2a79ef9822865184eced6e31066d8f6","modified":1741055283080},{"_id":"themes/icarus/.github/workflows/github-release.yml","hash":"d9830273e7e23c4151b10840f131f0b78b961bae","modified":1741055283082},{"_id":"themes/icarus/.github/workflows/lint.yml","hash":"17d374bf92867a67b15d657c2d41f8e4f9271102","modified":1741055283083},{"_id":"themes/icarus/.github/workflows/npm-publish.yml","hash":"de1ac56ec6888aaeb5db81d94693248b3467e4f6","modified":1741055283083},{"_id":"themes/icarus/.github/workflows/test.yml","hash":"706faa463b660412fe6474ea21cf4c2d8474c959","modified":1741055283083},{"_id":"themes/icarus/include/migration/head.js","hash":"7189efe33d18927d3790e8afb06642fb293b8603","modified":1741055283085},{"_id":"themes/icarus/include/migration/v2_v3.js","hash":"a46da71c20fa9d73c1bac26fda77717abae1b308","modified":1741055283086},{"_id":"themes/icarus/include/migration/v3_v4.js","hash":"9faf2184d7fe87debfbe007f3fc9079dcbcafcfe","modified":1741055283086},{"_id":"themes/icarus/include/migration/v5_v5.1.js","hash":"073f22bd16e34b56f016633b1676dab2e7d8843d","modified":1741055283086},{"_id":"themes/icarus/include/migration/v4_v5.js","hash":"6342310892d113763b5544789b45d44c0ccf2854","modified":1741055283086},{"_id":"themes/icarus/include/schema/config.json","hash":"f233678cd656c0e300181ca79dd30cb42fc213b3","modified":1741055283092},{"_id":"themes/icarus/include/style/article.styl","hash":"105c983871b6c9148d97a0f756886e56411572bd","modified":1741055283094},{"_id":"themes/icarus/include/style/card.styl","hash":"f78674422eb408cd17c17bbdc3ee1ebe4a453e05","modified":1741055283095},{"_id":"themes/icarus/include/style/base.styl","hash":"2bca6ad099949d52236c87db8db1002ffb99774c","modified":1741055283095},{"_id":"themes/icarus/include/style/button.styl","hash":"0fb35b4786be1b387c751fa2849bc71523fcedd4","modified":1741055283095},{"_id":"themes/icarus/include/style/codeblock.styl","hash":"ec54dc24eb4d9802d8fefc44c210558bc1641109","modified":1741055283096},{"_id":"themes/icarus/include/style/donate.styl","hash":"8d0af00628c13134b5f30a558608e7bebf18c2ec","modified":1741055283096},{"_id":"themes/icarus/include/style/footer.styl","hash":"a4ad715dee38b249538ac6cce94efc9b355a904b","modified":1741055283096},{"_id":"themes/icarus/include/style/navbar.styl","hash":"34f09b144cb46a25ec2cc7260a6c207dd34ff1fe","modified":1741055283097},{"_id":"themes/icarus/include/style/pagination.styl","hash":"b81bcd7ff915b4e9299533addc01bc4575ec35e3","modified":1741055283097},{"_id":"themes/icarus/include/style/helper.styl","hash":"9f3393e6122cc9f351091bfab960674e962da343","modified":1741055283096},{"_id":"themes/icarus/include/style/plugin.styl","hash":"084843d5a522029e0f84a4fe791fbcb2cabd4c36","modified":1741055283097},{"_id":"themes/icarus/include/style/responsive.styl","hash":"207083fe287612cddee6608b541861b14ac8de81","modified":1741055283097},{"_id":"themes/icarus/include/style/search.styl","hash":"416737e1da4e7e907bd03609b0fee9e2aacfe56c","modified":1741055283098},{"_id":"themes/icarus/include/style/timeline.styl","hash":"ea61798a09bffdda07efb93c2ff800b63bddc4c4","modified":1741055283098},{"_id":"themes/icarus/include/style/widget.styl","hash":"c746902251136544eb3fe523235b3183f4189460","modified":1741055283098},{"_id":"themes/icarus/include/util/console.js","hash":"59cf9d277d3ac85a496689bd811b1c316001641d","modified":1741055283098},{"_id":"themes/icarus/layout/common/article.jsx","hash":"a158e1a123b41a69fe1366f4c4e19fc1224d29fa","modified":1741055283105},{"_id":"themes/icarus/layout/common/comment.jsx","hash":"76ee7c6687e96e6262985323665d6273a37e54c5","modified":1741055283105},{"_id":"themes/icarus/layout/common/donates.jsx","hash":"fd52330d582fd122db7f55444c2f3368ff4bd8d7","modified":1741055283105},{"_id":"themes/icarus/layout/common/head.jsx","hash":"bf783d5ef6d58924150472637c6c17782c83e102","modified":1741055283106},{"_id":"themes/icarus/layout/common/navbar.jsx","hash":"d96e501e52861056474659f96ee0206588d8c93a","modified":1741055283106},{"_id":"themes/icarus/layout/common/footer.jsx","hash":"de966666f1e4ef80e0d15081b2709c3065b246dd","modified":1741055283106},{"_id":"themes/icarus/layout/common/scripts.jsx","hash":"5d07312406b401e8d4e9584b4d41ed7377993935","modified":1741055283107},{"_id":"themes/icarus/layout/common/search.jsx","hash":"1409627d98a92b4f5b2ab829f8e6b50b75d60e53","modified":1741055283107},{"_id":"themes/icarus/layout/common/widgets.jsx","hash":"7a89ac72a988d13b4714ab78a6dfd5cd8de85d47","modified":1741055283107},{"_id":"themes/icarus/layout/common/plugins.jsx","hash":"2e27800b2a8a87112c96778db858c3419d890b79","modified":1741055283106},{"_id":"themes/icarus/layout/plugin/animejs.jsx","hash":"e2aa27c3501a58ef1e91e511557b77395c2c02aa","modified":1741055283108},{"_id":"themes/icarus/layout/plugin/back_to_top.jsx","hash":"f86a0bae3a92bc07bd674f03a046fb1b6c1b48af","modified":1741055283109},{"_id":"themes/icarus/layout/plugin/pjax.jsx","hash":"65956102d5faabcedaaafb14b0201548f15e60ce","modified":1741055283109},{"_id":"themes/icarus/layout/common/share.jsx","hash":"0fad6f8a91bb5cf678b9ff2d66d2162d61625074","modified":1741055283107},{"_id":"themes/icarus/layout/widget/profile.jsx","hash":"2322a2b24e63bfb44b2acfc07795435f8c89d511","modified":1741055283110},{"_id":"themes/icarus/source/css/default.styl","hash":"b01da3028e5a1267a40aaae5c86a11187a2259e3","modified":1741055283113},{"_id":"themes/icarus/source/css/style.styl","hash":"5b9815586e993a6ccbe8cdcfc0c65ea38fc315ac","modified":1741055283113},{"_id":"themes/icarus/source/img/logo.svg","hash":"73a0282572c68980499ada968b0136c24444653f","modified":1741053823945},{"_id":"themes/icarus/source/css/cyberpunk.styl","hash":"ae17d3528df0c3f089df14a06b7bd82f1bc5fed9","modified":1741055283113},{"_id":"themes/icarus/source/js/.eslintrc.json","hash":"6bf0641cb69dffac97f69baea192d7fa3ab612cb","modified":1741055283116},{"_id":"themes/icarus/source/js/animation.js","hash":"0a8e361c353daa3194f4de3d646b96025d128e1a","modified":1741055283116},{"_id":"themes/icarus/source/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1741055283116},{"_id":"themes/icarus/source/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1741055283116},{"_id":"themes/icarus/source/js/main.js","hash":"37f3b16fbd9668b9496d5f2d9bd9fb22fc6cee27","modified":1741055283117},{"_id":"themes/icarus/source/js/pjax.js","hash":"1c9921d4bd07795adc1d01a12c0fddf7d1124ca2","modified":1741055283117},{"_id":"themes/icarus/include/schema/common/article.json","hash":"e2502c39045c6a26ccd8e880858f93e78c7bda35","modified":1741055283087},{"_id":"themes/icarus/include/schema/common/comment.json","hash":"265120b80df9808358df3ff7c4eada8a66512a4b","modified":1741055283089},{"_id":"themes/icarus/include/schema/common/donates.json","hash":"ae86e6f177bedf4afbe638502c12635027539305","modified":1741055283089},{"_id":"themes/icarus/include/schema/common/footer.json","hash":"e85c9d7f2579805beb252a1b6345d5a668a13baa","modified":1741055283089},{"_id":"themes/icarus/include/schema/common/head.json","hash":"98889f059c635e6bdbd51effd04cf1cf44968a66","modified":1741055283090},{"_id":"themes/icarus/include/schema/common/navbar.json","hash":"6691e587284c4cf450e0288680d5ff0f3565f090","modified":1741055283090},{"_id":"themes/icarus/include/schema/common/plugins.json","hash":"04c0738dc0a3ed89aecae2aee4ab60173f09e66b","modified":1741055283090},{"_id":"themes/icarus/include/schema/common/providers.json","hash":"97ec953d497fb53594227ae98acaef8a8baa91da","modified":1741055283090},{"_id":"themes/icarus/include/schema/common/share.json","hash":"cf4f9ff4fb27c3541b35f57db355c228fa6873e4","modified":1741055283091},{"_id":"themes/icarus/include/schema/common/search.json","hash":"985fbcbf47054af714ead1a124869d54f2a8b607","modified":1741055283091},{"_id":"themes/icarus/include/schema/common/widgets.json","hash":"cadd9dc942740ecd5037d3943e72f8b6a8399bbe","modified":1741055283092},{"_id":"themes/icarus/include/schema/plugin/back_to_top.json","hash":"dc0febab7e7b67075d0ad3f80f5ec8b798b68dea","modified":1741055283093},{"_id":"themes/icarus/include/schema/plugin/pjax.json","hash":"1f6218016569eb9cd354a06a9537c7110efb5f17","modified":1741055283093},{"_id":"themes/icarus/include/schema/common/sidebar.json","hash":"eb241beaec4c73e3085dfb3139ce72e827e20549","modified":1741055283091},{"_id":"themes/icarus/include/schema/plugin/animejs.json","hash":"e62ab6e20bd8862efa1ed32e7c0db0f8acbcfdec","modified":1741055283092},{"_id":"themes/icarus/include/schema/widget/profile.json","hash":"690ee1b0791cab47ea03cf42b5b4932ed2aa5675","modified":1741055283094},{"_id":"themes/icarus/source/img/og_image.png","hash":"af22ba7150f46212979c057822f2574eae8d4777","modified":1741053823947},{"_id":"themes/icarus/source/img/avatar.png","hash":"60eb9669a0e38275e82a17825d3d50a98161c8c5","modified":1741053823945},{"_id":"public/js/algolia.js","hash":"a8df0c0abeeb4ee1d2d720161f3aea7339380704","modified":1741057567835},{"_id":"public/js/google_cse.js","hash":"1a9881669dfdeb2b3214074eee0d3e01e52db2c4","modified":1741057567835},{"_id":"public/js/insight.js","hash":"86bbdb7305d9bf19ad62d2ca2cf169fc8d9f9d31","modified":1741057567835},{"_id":"public/manifest.json","hash":"6342abac6ed16a49e8e0f1ae30a74c41ef2a66cc","modified":1741057567835},{"_id":"public/content.json","hash":"d047ba9f5eb1799a11aff1997f8edb04368dd654","modified":1741057567835},{"_id":"public/js/toc.js","hash":"da6fb757a1b083b8ed138bf29aad3a7bf8ec4f11","modified":1741057567835},{"_id":"public/archives/2025/03/index.html","hash":"4dbf10eec9e95e5f3d5e6b68f381fba43a96729a","modified":1741057567835},{"_id":"public/archives/index.html","hash":"c821eb90c126e56e3ddc0d41a23f01ccf906f932","modified":1741057567835},{"_id":"public/index.html","hash":"ba8f6e543618bad396795f30b26432660f203a32","modified":1741057567835},{"_id":"public/2025/03/01/How-to-create-a-Hexo-Icarus-Blog/index.html","hash":"39742d1e3194d074fb2eb2e8a1eaa296b7fa5f33","modified":1741057567835},{"_id":"public/archives/2025/index.html","hash":"37ecccb7c13bc7ffb35b803885ac635c5a989314","modified":1741057567835},{"_id":"public/categories/index.html","hash":"847bfeb6b2d7d57da43ca338cb8978d00306aac6","modified":1741057567835},{"_id":"public/tags/index.html","hash":"92e9db0612506e52307452aa4e6e958509754862","modified":1741057567835},{"_id":"public/CNAME","hash":"16e6e182ce1e6df1443d8cd92a9d4cf892ef367f","modified":1741057567835},{"_id":"public/img/logo.svg","hash":"73a0282572c68980499ada968b0136c24444653f","modified":1741057567835},{"_id":"public/img/og_image.png","hash":"af22ba7150f46212979c057822f2574eae8d4777","modified":1741057567835},{"_id":"public/css/default.css","hash":"8717dd0ed1fe2a4237fbfb4f4f6e566cb1ee16b7","modified":1741057567835},{"_id":"public/js/animation.js","hash":"0a8e361c353daa3194f4de3d646b96025d128e1a","modified":1741057567835},{"_id":"public/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1741057567835},{"_id":"public/css/style.css","hash":"8717dd0ed1fe2a4237fbfb4f4f6e566cb1ee16b7","modified":1741057567835},{"_id":"public/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1741057567835},{"_id":"public/js/main.js","hash":"37f3b16fbd9668b9496d5f2d9bd9fb22fc6cee27","modified":1741057567835},{"_id":"public/css/cyberpunk.css","hash":"b462177bee11f76e84e649f8192d5a68cb4b1402","modified":1741057567835},{"_id":"public/js/pjax.js","hash":"1c9921d4bd07795adc1d01a12c0fddf7d1124ca2","modified":1741057567835},{"_id":"public/img/avatar.png","hash":"60eb9669a0e38275e82a17825d3d50a98161c8c5","modified":1741057567835},{"_id":"source/_posts/用-Vue-Directive-管理角色權限.md","hash":"2e8aed5e5f7aee18d76168fc31172b24ea226b76","modified":1741679217371}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hexo Icarus 架站紀錄","date":"2025-03-01T12:16:35.000Z","_content":"\n## 前言\n\n開始習慣了 Markdown 寫文件後，越來越覺得 Medium 不適合用來整理技術筆記，還是另尋空間，並終於在 2025 初用 Hexo 架了自己的 blog。\n\nHexo 有很多開源主題，原先我是無腦跟著 [胡立使用 Minos 這個主題](https://www.facebook.com/huli.blog/posts/pfbid0iW4WWd4yw2fZYT1N7ptEkzJb2WaLqpjKARZ1eRjhfwp2Z3udfBc9SKtK46zGb5ool)，但後來發現安裝過程出現問題，且 [Minos 的 GitHub](https://github.com/ppoffice/hexo-theme-minos) 也在 2022 年進入 read-only 狀態，不開放提 issue，決定轉向其他還在維護中的 theme。\n\n目前最熱門的 Hexo 主題除了 [NexT](https://github.com/theme-next/hexo-theme-next) 以外，也看到有人在推薦使用 [Icarus](https://github.com/ppoffice/hexo-theme-icarus)。後者的星星數沒有 NexT 那麼高，以順眼程度來說我還是選擇了 Icarus。\n\n---\n\n## 流程\n\n接下來紀錄我的架站過程。請記得用 `node -v`, `npm -v` 跟 `git` 檢查工具是否已經安裝好，再進行後續步驟。\n\n---\n\n### 1. 安裝 Hexo\n\n#### 1-1. 全局安裝 hexo-cli\n\n```bash\nnpm install -g hexo-cli\n```\n\n💡 **提示:**  \nMac 使用者可以用 `npm list -g --depth=0` 看到已經被全局安裝。\n\n---\n\n#### 1-2. 安裝 Hexo\n\n將 `<folder>` 換成自己想要的名稱：\n\n```bash\nhexo init <folder>\ncd <folder>\nnpm install\n```\n\n---\n\n#### 1-3. 檢查是否安裝完成\n\n用 `hexo server` 或 `hexo s` 並到 [http://localhost:4000](http://localhost:4000) 檢查，當看到預設的網站配置，代表安裝完成。\n\n![圖片](/img/How-to-create-a-Hexo-Icarus-Blog-1.png)\n\n---\n\n### 2. 推送至遠端 Git Repo\n\n到這為止，可以在 GitHub 建立個人 repo 並且推送。  \n必須設為公開才能加入 Discussion 留言版功能。\n\n---\n\n### 3. 安裝 Icarus 主題\n\nIcarus 官方 Blog [\"Getting Started with Icarus\"](https://ppoffice.github.io/hexo-theme-icarus/uncategorized/getting-started-with-icarus/) ([中文版](https://ppoffice.github.io/hexo-theme-icarus/uncategorized/icarus%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/)) 提供兩種安裝方式: Install from source 或 Install via NPM。\n\n我比較推薦用 **Install from source (`git clone`)**，因為大部分的 Blog 教學都是以這個為基礎來做配置。若使用 `npm install`，Icarus 會被當作 NPM package 來安裝，資料夾結構會長得跟 `git clone` 不太一樣，發生問題也比較少資源可以查詢。\n\n---\n\n#### 3-1. 使用 Install from source\n\n官方部落格有介紹兩種方法，選一種使用就好了。\n\n**方法一：獨立的 repo （我是選這個）**\n\n```bash\ngit clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus --depth 1\n```\n\n💡 **提示:**  \n- 若指定版本，可使用 `-b <version number>`，不指定就是 latest 版本。  \n- `--depth 1` 代表只下載最新的 commit，不包含完整的 commit 歷史。  \n- 使用這個方法後，須透過 `git rm --cached themes/icarus` 移除嵌套的 git repo，之後使用 `git add .` 才不會出現錯誤訊息。\n\n---\n\n**方法二：加入為 submodule**\n\n```bash\ngit submodule add https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus\n```\n\n💡 **提示:**  \n加入後，使用 `git submodule status` 可以看到子模組的資訊。\n\n---\n\n#### 3-2. 設定 theme\n\n```bash\nhexo config theme icarus\n```\n\n💡 **提示:**  \n這跟手動更改根資料夾中的 `_config.yml` 中的 `theme: icarus` 是一樣的意思。\n\n---\n\n#### 3-3. 使用 `hexo generate && hexo server` 檢查安裝成功\n\n![image](https://hackmd.io/_uploads/B1y8-rJYyx.png)\n\n---\n\n💡 **安裝過程中有遇到問題:**  \n見這篇 [GitHub Discussion](https://github.com/ppoffice/hexo-theme-icarus/issues/1340)\n\n","source":"_posts/How-to-create-a-Hexo-Icarus-Blog.md","raw":"---\ntitle: Hexo Icarus 架站紀錄\ndate: 2025-03-01 20:16:35\ntags:\n  - Hexo\n  - Blog\n  - Icarus\n---\n\n## 前言\n\n開始習慣了 Markdown 寫文件後，越來越覺得 Medium 不適合用來整理技術筆記，還是另尋空間，並終於在 2025 初用 Hexo 架了自己的 blog。\n\nHexo 有很多開源主題，原先我是無腦跟著 [胡立使用 Minos 這個主題](https://www.facebook.com/huli.blog/posts/pfbid0iW4WWd4yw2fZYT1N7ptEkzJb2WaLqpjKARZ1eRjhfwp2Z3udfBc9SKtK46zGb5ool)，但後來發現安裝過程出現問題，且 [Minos 的 GitHub](https://github.com/ppoffice/hexo-theme-minos) 也在 2022 年進入 read-only 狀態，不開放提 issue，決定轉向其他還在維護中的 theme。\n\n目前最熱門的 Hexo 主題除了 [NexT](https://github.com/theme-next/hexo-theme-next) 以外，也看到有人在推薦使用 [Icarus](https://github.com/ppoffice/hexo-theme-icarus)。後者的星星數沒有 NexT 那麼高，以順眼程度來說我還是選擇了 Icarus。\n\n---\n\n## 流程\n\n接下來紀錄我的架站過程。請記得用 `node -v`, `npm -v` 跟 `git` 檢查工具是否已經安裝好，再進行後續步驟。\n\n---\n\n### 1. 安裝 Hexo\n\n#### 1-1. 全局安裝 hexo-cli\n\n```bash\nnpm install -g hexo-cli\n```\n\n💡 **提示:**  \nMac 使用者可以用 `npm list -g --depth=0` 看到已經被全局安裝。\n\n---\n\n#### 1-2. 安裝 Hexo\n\n將 `<folder>` 換成自己想要的名稱：\n\n```bash\nhexo init <folder>\ncd <folder>\nnpm install\n```\n\n---\n\n#### 1-3. 檢查是否安裝完成\n\n用 `hexo server` 或 `hexo s` 並到 [http://localhost:4000](http://localhost:4000) 檢查，當看到預設的網站配置，代表安裝完成。\n\n![圖片](/img/How-to-create-a-Hexo-Icarus-Blog-1.png)\n\n---\n\n### 2. 推送至遠端 Git Repo\n\n到這為止，可以在 GitHub 建立個人 repo 並且推送。  \n必須設為公開才能加入 Discussion 留言版功能。\n\n---\n\n### 3. 安裝 Icarus 主題\n\nIcarus 官方 Blog [\"Getting Started with Icarus\"](https://ppoffice.github.io/hexo-theme-icarus/uncategorized/getting-started-with-icarus/) ([中文版](https://ppoffice.github.io/hexo-theme-icarus/uncategorized/icarus%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/)) 提供兩種安裝方式: Install from source 或 Install via NPM。\n\n我比較推薦用 **Install from source (`git clone`)**，因為大部分的 Blog 教學都是以這個為基礎來做配置。若使用 `npm install`，Icarus 會被當作 NPM package 來安裝，資料夾結構會長得跟 `git clone` 不太一樣，發生問題也比較少資源可以查詢。\n\n---\n\n#### 3-1. 使用 Install from source\n\n官方部落格有介紹兩種方法，選一種使用就好了。\n\n**方法一：獨立的 repo （我是選這個）**\n\n```bash\ngit clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus --depth 1\n```\n\n💡 **提示:**  \n- 若指定版本，可使用 `-b <version number>`，不指定就是 latest 版本。  \n- `--depth 1` 代表只下載最新的 commit，不包含完整的 commit 歷史。  \n- 使用這個方法後，須透過 `git rm --cached themes/icarus` 移除嵌套的 git repo，之後使用 `git add .` 才不會出現錯誤訊息。\n\n---\n\n**方法二：加入為 submodule**\n\n```bash\ngit submodule add https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus\n```\n\n💡 **提示:**  \n加入後，使用 `git submodule status` 可以看到子模組的資訊。\n\n---\n\n#### 3-2. 設定 theme\n\n```bash\nhexo config theme icarus\n```\n\n💡 **提示:**  \n這跟手動更改根資料夾中的 `_config.yml` 中的 `theme: icarus` 是一樣的意思。\n\n---\n\n#### 3-3. 使用 `hexo generate && hexo server` 檢查安裝成功\n\n![image](https://hackmd.io/_uploads/B1y8-rJYyx.png)\n\n---\n\n💡 **安裝過程中有遇到問題:**  \n見這篇 [GitHub Discussion](https://github.com/ppoffice/hexo-theme-icarus/issues/1340)\n\n","slug":"How-to-create-a-Hexo-Icarus-Blog","published":1,"updated":"2025-03-11T07:53:58.413Z","_id":"cm7twq1qa0000tktkcczr711d","comments":1,"layout":"post","photos":[],"content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>開始習慣了 Markdown 寫文件後，越來越覺得 Medium 不適合用來整理技術筆記，還是另尋空間，並終於在 2025 初用 Hexo 架了自己的 blog。</p>\n<p>Hexo 有很多開源主題，原先我是無腦跟著 <a href=\"https://www.facebook.com/huli.blog/posts/pfbid0iW4WWd4yw2fZYT1N7ptEkzJb2WaLqpjKARZ1eRjhfwp2Z3udfBc9SKtK46zGb5ool\">胡立使用 Minos 這個主題</a>，但後來發現安裝過程出現問題，且 <a href=\"https://github.com/ppoffice/hexo-theme-minos\">Minos 的 GitHub</a> 也在 2022 年進入 read-only 狀態，不開放提 issue，決定轉向其他還在維護中的 theme。</p>\n<p>目前最熱門的 Hexo 主題除了 <a href=\"https://github.com/theme-next/hexo-theme-next\">NexT</a> 以外，也看到有人在推薦使用 <a href=\"https://github.com/ppoffice/hexo-theme-icarus\">Icarus</a>。後者的星星數沒有 NexT 那麼高，以順眼程度來說我還是選擇了 Icarus。</p>\n<hr>\n<h2 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h2><p>接下來紀錄我的架站過程。請記得用 <code>node -v</code>, <code>npm -v</code> 跟 <code>git</code> 檢查工具是否已經安裝好，再進行後續步驟。</p>\n<hr>\n<h3 id=\"1-安裝-Hexo\"><a href=\"#1-安裝-Hexo\" class=\"headerlink\" title=\"1. 安裝 Hexo\"></a>1. 安裝 Hexo</h3><h4 id=\"1-1-全局安裝-hexo-cli\"><a href=\"#1-1-全局安裝-hexo-cli\" class=\"headerlink\" title=\"1-1. 全局安裝 hexo-cli\"></a>1-1. 全局安裝 hexo-cli</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>💡 <strong>提示:</strong><br>Mac 使用者可以用 <code>npm list -g --depth=0</code> 看到已經被全局安裝。</p>\n<hr>\n<h4 id=\"1-2-安裝-Hexo\"><a href=\"#1-2-安裝-Hexo\" class=\"headerlink\" title=\"1-2. 安裝 Hexo\"></a>1-2. 安裝 Hexo</h4><p>將 <code>&lt;folder&gt;</code> 換成自己想要的名稱：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\"><span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"1-3-檢查是否安裝完成\"><a href=\"#1-3-檢查是否安裝完成\" class=\"headerlink\" title=\"1-3. 檢查是否安裝完成\"></a>1-3. 檢查是否安裝完成</h4><p>用 <code>hexo server</code> 或 <code>hexo s</code> 並到 <a href=\"http://localhost:4000/\">http://localhost:4000</a> 檢查，當看到預設的網站配置，代表安裝完成。</p>\n<p><img src=\"/img/How-to-create-a-Hexo-Icarus-Blog-1.png\" alt=\"圖片\"></p>\n<hr>\n<h3 id=\"2-推送至遠端-Git-Repo\"><a href=\"#2-推送至遠端-Git-Repo\" class=\"headerlink\" title=\"2. 推送至遠端 Git Repo\"></a>2. 推送至遠端 Git Repo</h3><p>到這為止，可以在 GitHub 建立個人 repo 並且推送。<br>必須設為公開才能加入 Discussion 留言版功能。</p>\n<hr>\n<h3 id=\"3-安裝-Icarus-主題\"><a href=\"#3-安裝-Icarus-主題\" class=\"headerlink\" title=\"3. 安裝 Icarus 主題\"></a>3. 安裝 Icarus 主題</h3><p>Icarus 官方 Blog <a href=\"https://ppoffice.github.io/hexo-theme-icarus/uncategorized/getting-started-with-icarus/\">“Getting Started with Icarus”</a> (<a href=\"https://ppoffice.github.io/hexo-theme-icarus/uncategorized/icarus%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/\">中文版</a>) 提供兩種安裝方式: Install from source 或 Install via NPM。</p>\n<p>我比較推薦用 <strong>Install from source (<code>git clone</code>)</strong>，因為大部分的 Blog 教學都是以這個為基礎來做配置。若使用 <code>npm install</code>，Icarus 會被當作 NPM package 來安裝，資料夾結構會長得跟 <code>git clone</code> 不太一樣，發生問題也比較少資源可以查詢。</p>\n<hr>\n<h4 id=\"3-1-使用-Install-from-source\"><a href=\"#3-1-使用-Install-from-source\" class=\"headerlink\" title=\"3-1. 使用 Install from source\"></a>3-1. 使用 Install from source</h4><p>官方部落格有介紹兩種方法，選一種使用就好了。</p>\n<p><strong>方法一：獨立的 repo （我是選這個）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus --depth 1</span><br></pre></td></tr></table></figure>\n\n<p>💡 <strong>提示:</strong>  </p>\n<ul>\n<li>若指定版本，可使用 <code>-b &lt;version number&gt;</code>，不指定就是 latest 版本。  </li>\n<li><code>--depth 1</code> 代表只下載最新的 commit，不包含完整的 commit 歷史。  </li>\n<li>使用這個方法後，須透過 <code>git rm --cached themes/icarus</code> 移除嵌套的 git repo，之後使用 <code>git add .</code> 才不會出現錯誤訊息。</li>\n</ul>\n<hr>\n<p><strong>方法二：加入為 submodule</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git submodule add https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus</span><br></pre></td></tr></table></figure>\n\n<p>💡 <strong>提示:</strong><br>加入後，使用 <code>git submodule status</code> 可以看到子模組的資訊。</p>\n<hr>\n<h4 id=\"3-2-設定-theme\"><a href=\"#3-2-設定-theme\" class=\"headerlink\" title=\"3-2. 設定 theme\"></a>3-2. 設定 theme</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo config theme icarus</span><br></pre></td></tr></table></figure>\n\n<p>💡 <strong>提示:</strong><br>這跟手動更改根資料夾中的 <code>_config.yml</code> 中的 <code>theme: icarus</code> 是一樣的意思。</p>\n<hr>\n<h4 id=\"3-3-使用-hexo-generate-hexo-server-檢查安裝成功\"><a href=\"#3-3-使用-hexo-generate-hexo-server-檢查安裝成功\" class=\"headerlink\" title=\"3-3. 使用 hexo generate &amp;&amp; hexo server 檢查安裝成功\"></a>3-3. 使用 <code>hexo generate &amp;&amp; hexo server</code> 檢查安裝成功</h4><p><img src=\"https://hackmd.io/_uploads/B1y8-rJYyx.png\" alt=\"image\"></p>\n<hr>\n<p>💡 <strong>安裝過程中有遇到問題:</strong><br>見這篇 <a href=\"https://github.com/ppoffice/hexo-theme-icarus/issues/1340\">GitHub Discussion</a></p>\n","excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>開始習慣了 Markdown 寫文件後，越來越覺得 Medium 不適合用來整理技術筆記，還是另尋空間，並終於在 2025 初用 Hexo 架了自己的 blog。</p>\n<p>Hexo 有很多開源主題，原先我是無腦跟著 <a href=\"https://www.facebook.com/huli.blog/posts/pfbid0iW4WWd4yw2fZYT1N7ptEkzJb2WaLqpjKARZ1eRjhfwp2Z3udfBc9SKtK46zGb5ool\">胡立使用 Minos 這個主題</a>，但後來發現安裝過程出現問題，且 <a href=\"https://github.com/ppoffice/hexo-theme-minos\">Minos 的 GitHub</a> 也在 2022 年進入 read-only 狀態，不開放提 issue，決定轉向其他還在維護中的 theme。</p>\n<p>目前最熱門的 Hexo 主題除了 <a href=\"https://github.com/theme-next/hexo-theme-next\">NexT</a> 以外，也看到有人在推薦使用 <a href=\"https://github.com/ppoffice/hexo-theme-icarus\">Icarus</a>。後者的星星數沒有 NexT 那麼高，以順眼程度來說我還是選擇了 Icarus。</p>\n<hr>\n<h2 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h2><p>接下來紀錄我的架站過程。請記得用 <code>node -v</code>, <code>npm -v</code> 跟 <code>git</code> 檢查工具是否已經安裝好，再進行後續步驟。</p>\n<hr>\n<h3 id=\"1-安裝-Hexo\"><a href=\"#1-安裝-Hexo\" class=\"headerlink\" title=\"1. 安裝 Hexo\"></a>1. 安裝 Hexo</h3><h4 id=\"1-1-全局安裝-hexo-cli\"><a href=\"#1-1-全局安裝-hexo-cli\" class=\"headerlink\" title=\"1-1. 全局安裝 hexo-cli\"></a>1-1. 全局安裝 hexo-cli</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>💡 <strong>提示:</strong><br>Mac 使用者可以用 <code>npm list -g --depth=0</code> 看到已經被全局安裝。</p>\n<hr>\n<h4 id=\"1-2-安裝-Hexo\"><a href=\"#1-2-安裝-Hexo\" class=\"headerlink\" title=\"1-2. 安裝 Hexo\"></a>1-2. 安裝 Hexo</h4><p>將 <code>&lt;folder&gt;</code> 換成自己想要的名稱：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\"><span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"1-3-檢查是否安裝完成\"><a href=\"#1-3-檢查是否安裝完成\" class=\"headerlink\" title=\"1-3. 檢查是否安裝完成\"></a>1-3. 檢查是否安裝完成</h4><p>用 <code>hexo server</code> 或 <code>hexo s</code> 並到 <a href=\"http://localhost:4000/\">http://localhost:4000</a> 檢查，當看到預設的網站配置，代表安裝完成。</p>\n<p><img src=\"/img/How-to-create-a-Hexo-Icarus-Blog-1.png\" alt=\"圖片\"></p>\n<hr>\n<h3 id=\"2-推送至遠端-Git-Repo\"><a href=\"#2-推送至遠端-Git-Repo\" class=\"headerlink\" title=\"2. 推送至遠端 Git Repo\"></a>2. 推送至遠端 Git Repo</h3><p>到這為止，可以在 GitHub 建立個人 repo 並且推送。<br>必須設為公開才能加入 Discussion 留言版功能。</p>\n<hr>\n<h3 id=\"3-安裝-Icarus-主題\"><a href=\"#3-安裝-Icarus-主題\" class=\"headerlink\" title=\"3. 安裝 Icarus 主題\"></a>3. 安裝 Icarus 主題</h3><p>Icarus 官方 Blog <a href=\"https://ppoffice.github.io/hexo-theme-icarus/uncategorized/getting-started-with-icarus/\">“Getting Started with Icarus”</a> (<a href=\"https://ppoffice.github.io/hexo-theme-icarus/uncategorized/icarus%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/\">中文版</a>) 提供兩種安裝方式: Install from source 或 Install via NPM。</p>\n<p>我比較推薦用 <strong>Install from source (<code>git clone</code>)</strong>，因為大部分的 Blog 教學都是以這個為基礎來做配置。若使用 <code>npm install</code>，Icarus 會被當作 NPM package 來安裝，資料夾結構會長得跟 <code>git clone</code> 不太一樣，發生問題也比較少資源可以查詢。</p>\n<hr>\n<h4 id=\"3-1-使用-Install-from-source\"><a href=\"#3-1-使用-Install-from-source\" class=\"headerlink\" title=\"3-1. 使用 Install from source\"></a>3-1. 使用 Install from source</h4><p>官方部落格有介紹兩種方法，選一種使用就好了。</p>\n<p><strong>方法一：獨立的 repo （我是選這個）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus --depth 1</span><br></pre></td></tr></table></figure>\n\n<p>💡 <strong>提示:</strong>  </p>\n<ul>\n<li>若指定版本，可使用 <code>-b &lt;version number&gt;</code>，不指定就是 latest 版本。  </li>\n<li><code>--depth 1</code> 代表只下載最新的 commit，不包含完整的 commit 歷史。  </li>\n<li>使用這個方法後，須透過 <code>git rm --cached themes/icarus</code> 移除嵌套的 git repo，之後使用 <code>git add .</code> 才不會出現錯誤訊息。</li>\n</ul>\n<hr>\n<p><strong>方法二：加入為 submodule</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git submodule add https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus</span><br></pre></td></tr></table></figure>\n\n<p>💡 <strong>提示:</strong><br>加入後，使用 <code>git submodule status</code> 可以看到子模組的資訊。</p>\n<hr>\n<h4 id=\"3-2-設定-theme\"><a href=\"#3-2-設定-theme\" class=\"headerlink\" title=\"3-2. 設定 theme\"></a>3-2. 設定 theme</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo config theme icarus</span><br></pre></td></tr></table></figure>\n\n<p>💡 <strong>提示:</strong><br>這跟手動更改根資料夾中的 <code>_config.yml</code> 中的 <code>theme: icarus</code> 是一樣的意思。</p>\n<hr>\n<h4 id=\"3-3-使用-hexo-generate-hexo-server-檢查安裝成功\"><a href=\"#3-3-使用-hexo-generate-hexo-server-檢查安裝成功\" class=\"headerlink\" title=\"3-3. 使用 hexo generate &amp;&amp; hexo server 檢查安裝成功\"></a>3-3. 使用 <code>hexo generate &amp;&amp; hexo server</code> 檢查安裝成功</h4><p><img src=\"https://hackmd.io/_uploads/B1y8-rJYyx.png\" alt=\"image\"></p>\n<hr>\n<p>💡 <strong>安裝過程中有遇到問題:</strong><br>見這篇 <a href=\"https://github.com/ppoffice/hexo-theme-icarus/issues/1340\">GitHub Discussion</a></p>\n"},{"title":"用 Vue Directive 管理角色權限","date":"2025-03-11T07:43:58.000Z","_content":"\n### 前言\n最近在專案遇到的需求是依照角色分配不同權限，並依照權限顯示相應功能。\n\nrole 的值是在 login 後，從後端回傳 response 取得並存在 localStorage，用 Store 來管理角色狀態。\n\n原本我是在頁面上使用 computed 來及時從 store 獲得角色值，然後再用 `v-if` 控制是否顯示。但後來發現更好的寫法！於是做此紀錄。如果有朋友有更好的做法歡迎分享~\n\n\n**備註: 以下程式碼都經過處理，沒有直接將專案程式碼複製貼上。只是要傳達做法，請依照各自專案再去配置。**\n\n## 原本的方法: `v-if`\n\n- 在 userStore 透過 localStorage 存取 Role 角色:\n\n```javascript=\nimport { computed, ref } from \"vue\";\nimport { defineStore } from \"pinia\";\n\nexport const useUserStore = defineStore(\"user\", () => {\n\n  /** 使用者資訊 */\n  const userInfo = ref({\n    role: localStorage.getItem(\"userRole\") || \"\",\n  });\n\n  return { isLoggedIn, userInfo };\n});\n```\n\n\n- 在 utils 建立 hasRole 方法:\n```javascript!=\nimport { storeToRefs } from 'pinia';\nimport { useUserStore } from '@/store/modules/user';\n\nconst userStore = useUserStore();\nconst { userInfo } = storeToRefs(userStore);\n\nexport const hasRole = (role: Role): boolean => {\n  const userRole = userInfo.value.role;\n  return role === userRole;\n};\n```\n\n- 在 views 引入 hasRole 方法，判斷是否為某角色，template 區域用 v-if 來決定顯示該組件顯示與否。\n\n```html=\n<template>\n <MyButton v-if='!isPM'>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { hasRole } from '@/utils/role';\n\nconst isPM = computed(() => hasRole('PM'));\n</script>\n```\n\n### 缺點\n- 如果多出一個角色，就要再寫一個 `computed`。角色管理四散在不同的 views 檔案中。\n- `v-if` 寫法較無判別性，難以即時排查。\n\n----\n\n## 使用 Directive 寫法\n\n除了 Vue 原本提供的 `v-if`, `v-show` 等作法，我們也可以自己定義 `v-` 語法。\n\n### 什麼情境適合\n- 處理重複的工作，例如我在不同組件上要依照角色顯示功能\n- 可全局註冊並套用在 DOM 上使用\n- 可指定生命週期(例如 `mounted`) \n\n### 最終目標\n\n只要在 views 的 components 加上 `v-hide-for=\"['PM', 'RD']\"`，只要用這兩種角色登入，就無法看到這個組件。全局通用，且不需要額外在  `<script setup>`定義。\n\n\n```html=\n<PrimaryButton\n  v-hide-for=\"['PM', 'RD']\"`\n/>\n```\n\n### 優點\n- 邏輯都放在 directives 集中處理，比較好維護跟擴充\n- 不用在每個 views 都用 `computed` 定義，而是全局通用\n- 看起來直覺多了! \n\n### 官方文件 [ref](https://zh-hk.vuejs.org/guide/reusability/custom-directives#directive-hooks)\n\n```javascript=\nconst myDirective = {\n  // 在綁定元素的父組件\n  // 及他自己的所有子節點都掛載完成後調用\n  mounted(el, binding, vnode, prevVnode) {},\n}\n```\n\n**參數(都是可選的)**\n- el：指令綁定到的元素。這可以用於直接操作 DOM。\n- binding：一個對象，包含各種屬性，我使用的就是 value：傳遞給指令的值。\n\n### 實際作法\n\n1. 在 src 資料夾創造 `directives` 資料夾，創造 hideFor.ts 文件\n\n```javascript=\nimport type { Directive } from 'vue';\nimport { storeToRefs } from 'pinia';\nimport { useUserStore } from '@/store/modules/user';\n\nconst hideForDirective: Directive = {\n  mounted(el, binding) {\n    const userStore = useUserStore();\n    const { userInfo } = storeToRefs(userStore);\n    const excludedRoles = binding.value;\n\n    if (excludedRoles.includes(userInfo.value.role)) {\n      el.parentNode?.removeChild(el);\n    }\n  }\n};\n\nexport default hideForDirective;\n\n```\n\n\n2. 在 main.ts 做全局註冊\n```javascript=\nimport hideForDirective from '@/directives/hideFor';\nimport App from './App.vue';\n\nasync function setupApp() {\n  const app = createApp(App);\n\n  setupStore(app);\n    \n  app.directive('hideFor', hideForDirective);\n\n  app.mount('#app');\n}\n\nsetupApp();\n```\n\n3. 隱藏你想隱藏的吧!\n\n在 views 的組件上加 `v-hide-for=\"['PM']\"`，然後當我用 'PM' 的角色登入後，我就看不到這個 Button 嚕。\n\n```html=\n<PrimaryButton\n  v-hide-for=\"['PM']\"`\n/>","source":"_posts/用-Vue-Directive-管理角色權限.md","raw":"---\ntitle: 用 Vue Directive 管理角色權限\ndate: 2025-03-11 15:43:58\ntags: \n  - directive\n  - vue\n---\n\n### 前言\n最近在專案遇到的需求是依照角色分配不同權限，並依照權限顯示相應功能。\n\nrole 的值是在 login 後，從後端回傳 response 取得並存在 localStorage，用 Store 來管理角色狀態。\n\n原本我是在頁面上使用 computed 來及時從 store 獲得角色值，然後再用 `v-if` 控制是否顯示。但後來發現更好的寫法！於是做此紀錄。如果有朋友有更好的做法歡迎分享~\n\n\n**備註: 以下程式碼都經過處理，沒有直接將專案程式碼複製貼上。只是要傳達做法，請依照各自專案再去配置。**\n\n## 原本的方法: `v-if`\n\n- 在 userStore 透過 localStorage 存取 Role 角色:\n\n```javascript=\nimport { computed, ref } from \"vue\";\nimport { defineStore } from \"pinia\";\n\nexport const useUserStore = defineStore(\"user\", () => {\n\n  /** 使用者資訊 */\n  const userInfo = ref({\n    role: localStorage.getItem(\"userRole\") || \"\",\n  });\n\n  return { isLoggedIn, userInfo };\n});\n```\n\n\n- 在 utils 建立 hasRole 方法:\n```javascript!=\nimport { storeToRefs } from 'pinia';\nimport { useUserStore } from '@/store/modules/user';\n\nconst userStore = useUserStore();\nconst { userInfo } = storeToRefs(userStore);\n\nexport const hasRole = (role: Role): boolean => {\n  const userRole = userInfo.value.role;\n  return role === userRole;\n};\n```\n\n- 在 views 引入 hasRole 方法，判斷是否為某角色，template 區域用 v-if 來決定顯示該組件顯示與否。\n\n```html=\n<template>\n <MyButton v-if='!isPM'>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { hasRole } from '@/utils/role';\n\nconst isPM = computed(() => hasRole('PM'));\n</script>\n```\n\n### 缺點\n- 如果多出一個角色，就要再寫一個 `computed`。角色管理四散在不同的 views 檔案中。\n- `v-if` 寫法較無判別性，難以即時排查。\n\n----\n\n## 使用 Directive 寫法\n\n除了 Vue 原本提供的 `v-if`, `v-show` 等作法，我們也可以自己定義 `v-` 語法。\n\n### 什麼情境適合\n- 處理重複的工作，例如我在不同組件上要依照角色顯示功能\n- 可全局註冊並套用在 DOM 上使用\n- 可指定生命週期(例如 `mounted`) \n\n### 最終目標\n\n只要在 views 的 components 加上 `v-hide-for=\"['PM', 'RD']\"`，只要用這兩種角色登入，就無法看到這個組件。全局通用，且不需要額外在  `<script setup>`定義。\n\n\n```html=\n<PrimaryButton\n  v-hide-for=\"['PM', 'RD']\"`\n/>\n```\n\n### 優點\n- 邏輯都放在 directives 集中處理，比較好維護跟擴充\n- 不用在每個 views 都用 `computed` 定義，而是全局通用\n- 看起來直覺多了! \n\n### 官方文件 [ref](https://zh-hk.vuejs.org/guide/reusability/custom-directives#directive-hooks)\n\n```javascript=\nconst myDirective = {\n  // 在綁定元素的父組件\n  // 及他自己的所有子節點都掛載完成後調用\n  mounted(el, binding, vnode, prevVnode) {},\n}\n```\n\n**參數(都是可選的)**\n- el：指令綁定到的元素。這可以用於直接操作 DOM。\n- binding：一個對象，包含各種屬性，我使用的就是 value：傳遞給指令的值。\n\n### 實際作法\n\n1. 在 src 資料夾創造 `directives` 資料夾，創造 hideFor.ts 文件\n\n```javascript=\nimport type { Directive } from 'vue';\nimport { storeToRefs } from 'pinia';\nimport { useUserStore } from '@/store/modules/user';\n\nconst hideForDirective: Directive = {\n  mounted(el, binding) {\n    const userStore = useUserStore();\n    const { userInfo } = storeToRefs(userStore);\n    const excludedRoles = binding.value;\n\n    if (excludedRoles.includes(userInfo.value.role)) {\n      el.parentNode?.removeChild(el);\n    }\n  }\n};\n\nexport default hideForDirective;\n\n```\n\n\n2. 在 main.ts 做全局註冊\n```javascript=\nimport hideForDirective from '@/directives/hideFor';\nimport App from './App.vue';\n\nasync function setupApp() {\n  const app = createApp(App);\n\n  setupStore(app);\n    \n  app.directive('hideFor', hideForDirective);\n\n  app.mount('#app');\n}\n\nsetupApp();\n```\n\n3. 隱藏你想隱藏的吧!\n\n在 views 的組件上加 `v-hide-for=\"['PM']\"`，然後當我用 'PM' 的角色登入後，我就看不到這個 Button 嚕。\n\n```html=\n<PrimaryButton\n  v-hide-for=\"['PM']\"`\n/>","slug":"用-Vue-Directive-管理角色權限","published":1,"updated":"2025-03-11T07:46:57.371Z","_id":"cm846qk8a0000yktkbuhw5dmw","comments":1,"layout":"post","photos":[],"content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>最近在專案遇到的需求是依照角色分配不同權限，並依照權限顯示相應功能。</p>\n<p>role 的值是在 login 後，從後端回傳 response 取得並存在 localStorage，用 Store 來管理角色狀態。</p>\n<p>原本我是在頁面上使用 computed 來及時從 store 獲得角色值，然後再用 <code>v-if</code> 控制是否顯示。但後來發現更好的寫法！於是做此紀錄。如果有朋友有更好的做法歡迎分享~</p>\n<p><strong>備註: 以下程式碼都經過處理，沒有直接將專案程式碼複製貼上。只是要傳達做法，請依照各自專案再去配置。</strong></p>\n<h2 id=\"原本的方法-v-if\"><a href=\"#原本的方法-v-if\" class=\"headerlink\" title=\"原本的方法: v-if\"></a>原本的方法: <code>v-if</code></h2><ul>\n<li>在 userStore 透過 localStorage 存取 Role 角色:</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; computed, ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;pinia&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useUserStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">&quot;user&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/** 使用者資訊 */</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> userInfo = <span class=\"title function_\">ref</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">role</span>: <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;userRole&quot;</span>) || <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; isLoggedIn, userInfo &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>在 utils 建立 hasRole 方法:</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; storeToRefs &#125; from &#x27;pinia&#x27;;</span><br><span class=\"line\">import &#123; useUserStore &#125; from &#x27;@/store/modules/user&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">const userStore = useUserStore();</span><br><span class=\"line\">const &#123; userInfo &#125; = storeToRefs(userStore);</span><br><span class=\"line\"></span><br><span class=\"line\">export const hasRole = (role: Role): boolean =&gt; &#123;</span><br><span class=\"line\">  const userRole = userInfo.value.role;</span><br><span class=\"line\">  return role === userRole;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在 views 引入 hasRole 方法，判斷是否為某角色，template 區域用 v-if 來決定顯示該組件顯示與否。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">MyButton</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&#x27;!isPM&#x27;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;ts&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; computed &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; hasRole &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/role&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> isPM = <span class=\"title function_\">computed</span>(<span class=\"function\">() =&gt;</span> <span class=\"title function_\">hasRole</span>(<span class=\"string\">&#x27;PM&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"缺點\"><a href=\"#缺點\" class=\"headerlink\" title=\"缺點\"></a>缺點</h3><ul>\n<li>如果多出一個角色，就要再寫一個 <code>computed</code>。角色管理四散在不同的 views 檔案中。</li>\n<li><code>v-if</code> 寫法較無判別性，難以即時排查。</li>\n</ul>\n<hr>\n<h2 id=\"使用-Directive-寫法\"><a href=\"#使用-Directive-寫法\" class=\"headerlink\" title=\"使用 Directive 寫法\"></a>使用 Directive 寫法</h2><p>除了 Vue 原本提供的 <code>v-if</code>, <code>v-show</code> 等作法，我們也可以自己定義 <code>v-</code> 語法。</p>\n<h3 id=\"什麼情境適合\"><a href=\"#什麼情境適合\" class=\"headerlink\" title=\"什麼情境適合\"></a>什麼情境適合</h3><ul>\n<li>處理重複的工作，例如我在不同組件上要依照角色顯示功能</li>\n<li>可全局註冊並套用在 DOM 上使用</li>\n<li>可指定生命週期(例如 <code>mounted</code>)</li>\n</ul>\n<h3 id=\"最終目標\"><a href=\"#最終目標\" class=\"headerlink\" title=\"最終目標\"></a>最終目標</h3><p>只要在 views 的 components 加上 <code>v-hide-for=&quot;[&#39;PM&#39;, &#39;RD&#39;]&quot;</code>，只要用這兩種角色登入，就無法看到這個組件。全局通用，且不需要額外在  <code>&lt;script setup&gt;</code>定義。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">PrimaryButton</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-hide-for</span>=<span class=\"string\">&quot;[&#x27;PM&#x27;, &#x27;RD&#x27;]&quot;</span>`</span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"優點\"><a href=\"#優點\" class=\"headerlink\" title=\"優點\"></a>優點</h3><ul>\n<li>邏輯都放在 directives 集中處理，比較好維護跟擴充</li>\n<li>不用在每個 views 都用 <code>computed</code> 定義，而是全局通用</li>\n<li>看起來直覺多了!</li>\n</ul>\n<h3 id=\"官方文件-ref\"><a href=\"#官方文件-ref\" class=\"headerlink\" title=\"官方文件 ref\"></a>官方文件 <a href=\"https://zh-hk.vuejs.org/guide/reusability/custom-directives#directive-hooks\">ref</a></h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> myDirective = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在綁定元素的父組件</span></span><br><span class=\"line\">  <span class=\"comment\">// 及他自己的所有子節點都掛載完成後調用</span></span><br><span class=\"line\">  <span class=\"title function_\">mounted</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>參數(都是可選的)</strong></p>\n<ul>\n<li>el：指令綁定到的元素。這可以用於直接操作 DOM。</li>\n<li>binding：一個對象，包含各種屬性，我使用的就是 value：傳遞給指令的值。</li>\n</ul>\n<h3 id=\"實際作法\"><a href=\"#實際作法\" class=\"headerlink\" title=\"實際作法\"></a>實際作法</h3><ol>\n<li>在 src 資料夾創造 <code>directives</code> 資料夾，創造 hideFor.ts 文件</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> type &#123; <span class=\"title class_\">Directive</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; storeToRefs &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useUserStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/store/modules/user&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">hideForDirective</span>: <span class=\"title class_\">Directive</span> = &#123;</span><br><span class=\"line\">  <span class=\"title function_\">mounted</span>(<span class=\"params\">el, binding</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userStore = <span class=\"title function_\">useUserStore</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; userInfo &#125; = <span class=\"title function_\">storeToRefs</span>(userStore);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> excludedRoles = binding.<span class=\"property\">value</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (excludedRoles.<span class=\"title function_\">includes</span>(userInfo.<span class=\"property\">value</span>.<span class=\"property\">role</span>)) &#123;</span><br><span class=\"line\">      el.<span class=\"property\">parentNode</span>?.<span class=\"title function_\">removeChild</span>(el);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> hideForDirective;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<ol start=\"2\">\n<li>在 main.ts 做全局註冊</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hideForDirective <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/directives/hideFor&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">setupApp</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">setupStore</span>(app);</span><br><span class=\"line\">    </span><br><span class=\"line\">  app.<span class=\"title function_\">directive</span>(<span class=\"string\">&#x27;hideFor&#x27;</span>, hideForDirective);</span><br><span class=\"line\"></span><br><span class=\"line\">  app.<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">setupApp</span>();</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>隱藏你想隱藏的吧!</li>\n</ol>\n<p>在 views 的組件上加 <code>v-hide-for=&quot;[&#39;PM&#39;]&quot;</code>，然後當我用 ‘PM’ 的角色登入後，我就看不到這個 Button 嚕。</p>\n<pre><code class=\"language-html=\">&lt;PrimaryButton\n  v-hide-for=&quot;[&#39;PM&#39;]&quot;`\n/&gt;\n</code></pre>\n","excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>最近在專案遇到的需求是依照角色分配不同權限，並依照權限顯示相應功能。</p>\n<p>role 的值是在 login 後，從後端回傳 response 取得並存在 localStorage，用 Store 來管理角色狀態。</p>\n<p>原本我是在頁面上使用 computed 來及時從 store 獲得角色值，然後再用 <code>v-if</code> 控制是否顯示。但後來發現更好的寫法！於是做此紀錄。如果有朋友有更好的做法歡迎分享~</p>\n<p><strong>備註: 以下程式碼都經過處理，沒有直接將專案程式碼複製貼上。只是要傳達做法，請依照各自專案再去配置。</strong></p>\n<h2 id=\"原本的方法-v-if\"><a href=\"#原本的方法-v-if\" class=\"headerlink\" title=\"原本的方法: v-if\"></a>原本的方法: <code>v-if</code></h2><ul>\n<li>在 userStore 透過 localStorage 存取 Role 角色:</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; computed, ref &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; defineStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;pinia&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> useUserStore = <span class=\"title function_\">defineStore</span>(<span class=\"string\">&quot;user&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/** 使用者資訊 */</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> userInfo = <span class=\"title function_\">ref</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">role</span>: <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;userRole&quot;</span>) || <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; isLoggedIn, userInfo &#125;;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li>在 utils 建立 hasRole 方法:</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; storeToRefs &#125; from &#x27;pinia&#x27;;</span><br><span class=\"line\">import &#123; useUserStore &#125; from &#x27;@/store/modules/user&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">const userStore = useUserStore();</span><br><span class=\"line\">const &#123; userInfo &#125; = storeToRefs(userStore);</span><br><span class=\"line\"></span><br><span class=\"line\">export const hasRole = (role: Role): boolean =&gt; &#123;</span><br><span class=\"line\">  const userRole = userInfo.value.role;</span><br><span class=\"line\">  return role === userRole;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在 views 引入 hasRole 方法，判斷是否為某角色，template 區域用 v-if 來決定顯示該組件顯示與否。</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">MyButton</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&#x27;!isPM&#x27;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;ts&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; computed &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">import</span> &#123; hasRole &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils/role&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">const</span> isPM = <span class=\"title function_\">computed</span>(<span class=\"function\">() =&gt;</span> <span class=\"title function_\">hasRole</span>(<span class=\"string\">&#x27;PM&#x27;</span>));</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"缺點\"><a href=\"#缺點\" class=\"headerlink\" title=\"缺點\"></a>缺點</h3><ul>\n<li>如果多出一個角色，就要再寫一個 <code>computed</code>。角色管理四散在不同的 views 檔案中。</li>\n<li><code>v-if</code> 寫法較無判別性，難以即時排查。</li>\n</ul>\n<hr>\n<h2 id=\"使用-Directive-寫法\"><a href=\"#使用-Directive-寫法\" class=\"headerlink\" title=\"使用 Directive 寫法\"></a>使用 Directive 寫法</h2><p>除了 Vue 原本提供的 <code>v-if</code>, <code>v-show</code> 等作法，我們也可以自己定義 <code>v-</code> 語法。</p>\n<h3 id=\"什麼情境適合\"><a href=\"#什麼情境適合\" class=\"headerlink\" title=\"什麼情境適合\"></a>什麼情境適合</h3><ul>\n<li>處理重複的工作，例如我在不同組件上要依照角色顯示功能</li>\n<li>可全局註冊並套用在 DOM 上使用</li>\n<li>可指定生命週期(例如 <code>mounted</code>)</li>\n</ul>\n<h3 id=\"最終目標\"><a href=\"#最終目標\" class=\"headerlink\" title=\"最終目標\"></a>最終目標</h3><p>只要在 views 的 components 加上 <code>v-hide-for=&quot;[&#39;PM&#39;, &#39;RD&#39;]&quot;</code>，只要用這兩種角色登入，就無法看到這個組件。全局通用，且不需要額外在  <code>&lt;script setup&gt;</code>定義。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">PrimaryButton</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">v-hide-for</span>=<span class=\"string\">&quot;[&#x27;PM&#x27;, &#x27;RD&#x27;]&quot;</span>`</span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"優點\"><a href=\"#優點\" class=\"headerlink\" title=\"優點\"></a>優點</h3><ul>\n<li>邏輯都放在 directives 集中處理，比較好維護跟擴充</li>\n<li>不用在每個 views 都用 <code>computed</code> 定義，而是全局通用</li>\n<li>看起來直覺多了!</li>\n</ul>\n<h3 id=\"官方文件-ref\"><a href=\"#官方文件-ref\" class=\"headerlink\" title=\"官方文件 ref\"></a>官方文件 <a href=\"https://zh-hk.vuejs.org/guide/reusability/custom-directives#directive-hooks\">ref</a></h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> myDirective = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 在綁定元素的父組件</span></span><br><span class=\"line\">  <span class=\"comment\">// 及他自己的所有子節點都掛載完成後調用</span></span><br><span class=\"line\">  <span class=\"title function_\">mounted</span>(<span class=\"params\">el, binding, vnode, prevVnode</span>) &#123;&#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>參數(都是可選的)</strong></p>\n<ul>\n<li>el：指令綁定到的元素。這可以用於直接操作 DOM。</li>\n<li>binding：一個對象，包含各種屬性，我使用的就是 value：傳遞給指令的值。</li>\n</ul>\n<h3 id=\"實際作法\"><a href=\"#實際作法\" class=\"headerlink\" title=\"實際作法\"></a>實際作法</h3><ol>\n<li>在 src 資料夾創造 <code>directives</code> 資料夾，創造 hideFor.ts 文件</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> type &#123; <span class=\"title class_\">Directive</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; storeToRefs &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;pinia&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useUserStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/store/modules/user&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">hideForDirective</span>: <span class=\"title class_\">Directive</span> = &#123;</span><br><span class=\"line\">  <span class=\"title function_\">mounted</span>(<span class=\"params\">el, binding</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> userStore = <span class=\"title function_\">useUserStore</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; userInfo &#125; = <span class=\"title function_\">storeToRefs</span>(userStore);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> excludedRoles = binding.<span class=\"property\">value</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (excludedRoles.<span class=\"title function_\">includes</span>(userInfo.<span class=\"property\">value</span>.<span class=\"property\">role</span>)) &#123;</span><br><span class=\"line\">      el.<span class=\"property\">parentNode</span>?.<span class=\"title function_\">removeChild</span>(el);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> hideForDirective;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<ol start=\"2\">\n<li>在 main.ts 做全局註冊</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hideForDirective <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/directives/hideFor&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">App</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./App.vue&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">setupApp</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> app = <span class=\"title function_\">createApp</span>(<span class=\"title class_\">App</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">setupStore</span>(app);</span><br><span class=\"line\">    </span><br><span class=\"line\">  app.<span class=\"title function_\">directive</span>(<span class=\"string\">&#x27;hideFor&#x27;</span>, hideForDirective);</span><br><span class=\"line\"></span><br><span class=\"line\">  app.<span class=\"title function_\">mount</span>(<span class=\"string\">&#x27;#app&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">setupApp</span>();</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>隱藏你想隱藏的吧!</li>\n</ol>\n<p>在 views 的組件上加 <code>v-hide-for=&quot;[&#39;PM&#39;]&quot;</code>，然後當我用 ‘PM’ 的角色登入後，我就看不到這個 Button 嚕。</p>\n<pre><code class=\"language-html=\">&lt;PrimaryButton\n  v-hide-for=&quot;[&#39;PM&#39;]&quot;`\n/&gt;\n</code></pre>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cm846qk8a0000yktkbuhw5dmw","tag_id":"cm846sxmj0003yktk7xj2ednu","_id":"cm846u56w0007yktk4w3ae6u0"},{"post_id":"cm846qk8a0000yktkbuhw5dmw","tag_id":"cm846u56w0006yktk7cdd1f7d","_id":"cm846u56w0008yktk49elcg46"},{"post_id":"cm7twq1qa0000tktkcczr711d","tag_id":"cm846um4n000byktk7h0maswc","_id":"cm846um4o000cyktk8jqz28h1"},{"post_id":"cm7twq1qa0000tktkcczr711d","tag_id":"cm846undp000dyktk65q2cx5c","_id":"cm846undp000eyktk65922nqe"},{"post_id":"cm7twq1qa0000tktkcczr711d","tag_id":"cm846ury0000fyktk3sglezbg","_id":"cm846ury0000gyktk5hpp12ay"}],"Tag":[{"name":"directive, vue","_id":"cm846spya0001yktkdlykgc92"},{"name":"directive","_id":"cm846sxmj0003yktk7xj2ednu"},{"name":"vue","_id":"cm846u56w0006yktk7cdd1f7d"},{"name":"Hexo","_id":"cm846um4n000byktk7h0maswc"},{"name":"Blog","_id":"cm846undp000dyktk65q2cx5c"},{"name":"Icarus","_id":"cm846ury0000fyktk3sglezbg"}]}}